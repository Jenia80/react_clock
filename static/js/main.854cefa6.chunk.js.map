{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","timerId","setInterval","this","setState","Date","toLocaleTimeString","console","log","prevProps","props","name","clearInterval","React","Component","App","isClockVisible","clockName","Visible","className","type","onClick","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAFV,EAKEC,QAAwBC,aAAY,cAAU,GALhD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,WACzB,EAAKE,SAAS,CAAEJ,MAAM,IAAIK,MAAOC,uBAGjCC,QAAQC,KAAI,IAAIH,MAAOC,wBACtB,OAbP,gCAgBE,SAAmBG,GACbN,KAAKO,MAAMC,OAASF,EAAUE,MAEhCJ,QAAQC,IAAR,qCAA0CC,EAAUE,KAApD,eAA+DR,KAAKO,MAAMC,SAnBhF,kCAuBE,WACEC,cAAcT,KAAKF,WAxBvB,oBA2BE,WACE,OACE,mCACE,sBAAM,UAAQ,OAAd,SACGE,KAAKJ,MAAMC,aA/BtB,GAA2Ba,IAAMC,WCN3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,QAAU,WACR,EAAKd,SAAS,CACZY,gBAAgB,K,4CAIpB,WAAU,IAAD,OACP,OACE,sBAAKG,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,uBAEG,IACAhB,KAAKJ,MAAMkB,aAGd,qBAAKE,UAAU,aAAf,SACGhB,KAAKJ,MAAMiB,eACR,cAAC,EAAD,CAAOL,KAAMR,KAAKJ,MAAMkB,YAExB,0DAIN,gCACE,wBACEG,KAAK,SACLD,UAAU,cACVE,QAASlB,KAAKe,QAHhB,wBAQA,wBACEE,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAO,EAAKjB,SAAS,CAAEY,gBAAgB,KAHlD,wBAQA,wBACEI,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAM,EAAKjB,SAAS,CAC3Ba,UACEK,KAAKC,MAAsB,IAAhBD,KAAKE,aALtB,kC,GA9CQX,IAAMC,WA8DTC,IC/DfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.854cefa6.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  time: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: '',\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {}, 0);\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line no-console\n      console.log(new Date().toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <>\n        <span data-cy=\"time\">\n          {this.state.time}\n        </span>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  Visible = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          local time\n          {' '}\n          {this.state.clockName}\n        </h1>\n\n        <div className=\"App__clock\">\n          {this.state.isClockVisible\n            ? <Clock name={this.state.clockName} />\n            : (\n              <p>NO ONE NEEDS THE CLOCKS</p>\n            )}\n        </div>\n\n        <div>\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={this.Visible}\n          >\n            SHOW CLOCK\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={() => (this.setState({ isClockVisible: false }))}\n          >\n            HIDE CLOCK\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={() => this.setState({\n              clockName:\n                Math.round(Math.random() * 100),\n            })}\n          >\n            CLICK ME:)\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}